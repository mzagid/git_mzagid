# Мы делаем MVP dating-сервиса, и у нас есть список парней и девушек (их число может варьироваться):

# boys = ['Peter', 'Alex', 'John', 'Arthur', 'Richard']
# girls = ['Kate', 'Liza', 'Kira', 'Emma', 'Trisha']

# Выдвигаем гипотезу: лучшие рекомендации мы получим, если просто отсортируем имена по алфавиту 
# и познакомим людей с одинаковыми индексами после сортировки! "Познакомить" пары нам поможет функция zip, 
# а в цикле распакуем zip-объект и выведем информацию в виде:

# Идеальные пары:
# Alex и Emma
# Arthur и Kate
# John и Kira
# Peter и Liza
# Richard и Trisha

# Внимание! Если количество людей в списках будет не совпадать, 
# то мы никого знакомить не будем и выведем пользователю предупреждение, что кто-то может остаться без пары!

# Решение:

boys = ['Peter', 'Alex', 'John', 'Arthur', 'Richard']
boys.sort() 
girls = ['Kate', 'Liza', 'Kira', 'Emma', 'Trisha']
girls.sort()

if len(boys) != len(girls):
    print("Кто-то может остаться без пары!")
else:
    couples = zip(boys, girls)
    print("Идеальные пары:")
    for boy, girl in couples:
        print(f"{boy} и {girl}")

# отсортировал списки при помощи sort(список)
# поставил условие, при котором False ведет меня дальше
# из двух списков создал zip-объект
# распаковал zip как два кортежа в цикле for 
# использовал f-строку для вывода